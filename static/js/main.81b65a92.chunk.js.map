{"version":3,"sources":["api/goods.ts","App.tsx","GoodsList.tsx","index.tsx"],"names":["getAll","fetch","then","response","json","FilterBy","get5First","goods","sort","firstGood","secondGood","name","localeCompare","slice","getRedGoods","filter","good","color","GoodsList","className","map","style","id","App","useState","setGoods","isError","setIsError","isLoading","setIsLoading","filterBy","setFilterBy","handleError","getGoods","useCallback","callback","a","result","catch","finally","handleButtonClick","filterType","ALL","FirstFive","RED","type","onClick","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","ReactDOM","render","document","getElementById"],"mappings":"2PAKO,SAASA,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,ICCFC,EDDQC,EAAY,WACvB,OAAON,IACJE,MAAK,SAAAK,GAAK,OAAIA,EACZC,MAAK,SAACC,EAAiBC,GACtB,OAAOD,EAAUE,KAAKC,cAAcF,EAAWC,SAEhDE,MAAM,EAAG,OAGHC,EAAc,WACzB,OAAOd,IACJE,MAAK,SAAAK,GAAK,OAAIA,EACZQ,QAAO,SAAAC,GAAI,MAAmB,QAAfA,EAAKC,a,OEddC,EAA6B,SAAC,GAAD,IAAGX,EAAH,EAAGA,MAAH,OACxC,oBAAIY,UAAU,QAAd,SACGZ,EAAMa,KAAI,SAAAJ,GAAI,OACb,oBAEE,UAAQ,OACRG,UAAU,4BACVE,MAAO,CAAEJ,MAAM,GAAD,OAAKD,EAAKC,QAJ1B,SAMGD,EAAKL,MALDK,EAAKM,W,SDDbjB,K,iBAAAA,E,8BAAAA,E,kBAAAA,M,KAME,IAAMkB,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAOjB,EAAP,KAAckB,EAAd,KACA,EAA8BD,oBAAS,GAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KACA,EAAkCH,oBAAS,GAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KACA,EAAgCL,qBAAhC,mBAAOM,EAAP,KAAiBC,EAAjB,KAEMC,EAAc,WAClBL,GAAW,GACXE,GAAa,IAGTI,EAAWC,sBAAW,uCAAC,WAC3BC,GAD2B,SAAAC,EAAA,sDAG3BT,GAAW,GACXE,GAAa,GAEbM,IACGjC,MAAK,SAAAmC,GACJZ,EAASY,MAEVC,MAAMN,GACNO,SAAQ,kBAAMV,GAAa,MAXH,2CAAD,sDAYzB,IAEGW,EAAoB,SAACC,GACzB,GAAIX,IAAaW,EAAjB,CAIA,OAAQA,GACN,KAAKpC,EAASqC,IACZT,EAASjC,GACT,MAEF,KAAKK,EAASsC,UACZV,EAAS3B,GACT,MAEF,KAAKD,EAASuC,IACZX,EAASnB,GAObiB,EAAYU,KAGd,OACE,sBAAKtB,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,mCAECO,EAEG,qCACE,4DACA,wBACEmB,KAAK,SACL1B,UAAU,oBACV2B,QAAS,WACPnB,GAAW,GACXI,EAAY,OALhB,0BAaF,qCACE,sBAAKZ,UAAU,UAAf,UACE,wBACE0B,KAAK,SACL1B,UAAU,oBACV,UAAQ,aACR2B,QAAS,kBAAMN,EAAkBnC,EAASqC,MAJ5C,4BASA,wBACEG,KAAK,SACL1B,UAAU,oBACV,UAAQ,oBACR2B,QAAS,kBAAMN,EAAkBnC,EAASsC,YAJ5C,gCASA,wBACEE,KAAK,SACL1B,UAAU,mBACV,UAAQ,aACR2B,QAAS,kBAAMN,EAAkBnC,EAASuC,MAJ5C,+BAUDhB,EAEG,cAAC,IAAD,CACEmB,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,aAAc,GACdC,aAAa,iBACbC,OACE,CAAC,UAAW,UAAW,UAAW,UAAW,aAKjD,cAAC,EAAD,CAAW7C,MAAOA,WEjIlC8C,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.81b65a92.chunk.js","sourcesContent":["import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods\n      .sort((firstGood: Good, secondGood: Good) => {\n        return firstGood.name.localeCompare(secondGood.name);\n      })\n      .slice(0, 5));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods\n      .filter(good => good.color === 'red'));\n};\n","import React, { useCallback, useState } from 'react';\n\nimport { ColorRing } from 'react-loader-spinner';\nimport 'bulma/css/bulma.min.css';\nimport './App.scss';\n\nimport { Good } from './types/Good';\nimport { getAll, get5First, getRedGoods } from './api/goods';\n\nimport { GoodsList } from './GoodsList';\n\nenum FilterBy {\n  ALL = 'all-button',\n  FirstFive = 'first-five-button',\n  RED = 'red-button',\n}\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [filterBy, setFilterBy] = useState<FilterBy | null>();\n\n  const handleError = () => {\n    setIsError(true);\n    setIsLoading(false);\n  };\n\n  const getGoods = useCallback(async (\n    callback: () => Promise<Good[]>,\n  ): Promise<void> => {\n    setIsError(false);\n    setIsLoading(true);\n\n    callback()\n      .then(result => {\n        setGoods(result);\n      })\n      .catch(handleError)\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const handleButtonClick = (filterType: FilterBy) => {\n    if (filterBy === filterType) {\n      return;\n    }\n\n    switch (filterType) {\n      case FilterBy.ALL:\n        getGoods(getAll);\n        break;\n\n      case FilterBy.FirstFive:\n        getGoods(get5First);\n        break;\n\n      case FilterBy.RED:\n        getGoods(getRedGoods);\n        break;\n\n      default:\n        break;\n    }\n\n    setFilterBy(filterType);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title is-3\">Dynamic list of Goods</h1>\n\n      {isError\n        ? (\n          <>\n            <p>Oops! Something went wrong!</p>\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                setIsError(false);\n                setFilterBy(null);\n              }}\n            >\n              Try again\n            </button>\n          </>\n        )\n        : (\n          <>\n            <div className=\"buttons\">\n              <button\n                type=\"button\"\n                className=\"button is-primary\"\n                data-cy=\"all-button\"\n                onClick={() => handleButtonClick(FilterBy.ALL)}\n              >\n                Load all goods\n              </button>\n\n              <button\n                type=\"button\"\n                className=\"button is-warning\"\n                data-cy=\"first-five-button\"\n                onClick={() => handleButtonClick(FilterBy.FirstFive)}\n              >\n                Load 5 first goods\n              </button>\n\n              <button\n                type=\"button\"\n                className=\"button is-danger\"\n                data-cy=\"red-button\"\n                onClick={() => handleButtonClick(FilterBy.RED)}\n              >\n                Load red goods\n              </button>\n            </div>\n\n            {isLoading\n              ? (\n                <ColorRing\n                  height=\"50\"\n                  width=\"50\"\n                  ariaLabel=\"blocks-loading\"\n                  wrapperStyle={{}}\n                  wrapperClass=\"blocks-wrapper\"\n                  colors={\n                    ['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']\n                  }\n                />\n              )\n              : (\n                <GoodsList goods={goods} />\n              )}\n          </>\n        )}\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul className=\"goods\">\n    {goods.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        className=\"goods__item tag is-medium\"\n        style={{ color: `${good.color}` }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}